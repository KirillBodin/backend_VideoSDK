const { createMeetingInVideoSDK, getMeetingFromDB } = require("../services/meetingService");

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏
exports.createMeeting = async (req, res) => {
  try {
    const { className } = req.body;
    
    if (!className) {
      return res.status(400).json({ error: "className is required" });
    }

    console.log(`[meetingsController] üîç –ò—â–µ–º –≤—Å—Ç—Ä–µ—á—É –¥–ª—è –∫–ª–∞—Å—Å–∞: ${className}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤—Å—Ç—Ä–µ—á–∞
    let meeting = await getMeetingFromDB(className);
    if (!meeting) {
      console.log(`[meetingsController] ‚ùå –í—Å—Ç—Ä–µ—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...`);
      meeting = await createMeetingInVideoSDK(className);
    }

    return res.json({ meetingId: meeting.meetingId });
  } catch (error) {
    console.error("[meetingsController] ‚ùå –û—à–∏–±–∫–∞:", error);
    res.status(500).json({ error: "Internal server error" });
  }
};

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è `meetingId` –ø–æ `className`
exports.getMeetingByClass = async (req, res) => {
  try {
    const { className } = req.params;

    if (!className) {
      return res.status(400).json({ error: "className is required" });
    }

    console.log(`[meetingsController] üîç –ü–æ–ª—É—á–∞–µ–º meetingId –¥–ª—è –∫–ª–∞—Å—Å–∞: ${className}`);
    
    const meeting = await getMeetingFromDB(className);
    
    if (!meeting) {
      return res.status(404).json({ error: "Meeting not found" });
    }

    return res.json({ meetingId: meeting.meetingId });
  } catch (error) {
    console.error("[meetingsController] ‚ùå –û—à–∏–±–∫–∞:", error);
    res.status(500).json({ error: "Internal server error" });
  }
};
