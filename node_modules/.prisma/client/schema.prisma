generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // ✅ Используем переменную окружения
}

// ✅ Модель пользователей (SuperAdmin, Admin, Teacher)
model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role
  name     String
  schoolId Int? // Можем указать, если пользователь принадлежит к школе

  // Связь с моделью School (если пользователь – админ или учитель)
  school   School?        @relation(fields: [schoolId], references: [id], onDelete: Cascade)
  meetings ClassMeeting[] // ✅ Связь с уроками для учителей
}

// ✅ Модель школы (School)
model School {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[] // ✅ Один ко многим (школа -> пользователи)
}

// ✅ Модель уроков (ClassMeeting)
model ClassMeeting {
  id        Int    @id @default(autoincrement())
  className String
  meetingId String @unique
  teacherId Int

  teacher User @relation(fields: [teacherId], references: [id], onDelete: Cascade)
}

// ✅ Перечисление ролей пользователей
enum Role {
  SUPERADMIN
  ADMIN
  TEACHER
}
